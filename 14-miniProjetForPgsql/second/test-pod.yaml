apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: 54e27bb5334c421b8f740ffbd8d566f7f3d3ac0bfb2cc7a8febccaba82cced42
    cni.projectcalico.org/podIP: 192.168.59.120/32
    cni.projectcalico.org/podIPs: 192.168.59.120/32
  creationTimestamp: "2023-01-05T08:17:25Z"
  generateName: test-vol-dep-6664956c78-
  labels:
    app: test-vol-dep
    pod-template-hash: 6664956c78
  name: test-vol-dep-6664956c78-ghfhk
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: test-vol-dep-6664956c78
    uid: bb4e1a3f-4d42-4bcf-8c2d-e7635c058777
  resourceVersion: "1238236"
  uid: 18c84b15-99bb-43cf-8048-c0eda374513c
spec:
  containers:
  - image: postgres:10.1
    imagePullPolicy: IfNotPresent
    name: postgres
    ports:
    - containerPort: 5432
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt
      name: sec-vol
    - mountPath: /tmp
      name: cm-vol
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-7gstn
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: centos8-slave
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: sec-vol
    secret:
      defaultMode: 420
      secretName: pgsql-secret
  - configMap:
      defaultMode: 420
      items:
      - key: POSTGRES_DB
        path: cm-key-pgdb
      name: pgsql-config-map
    name: cm-vol
  - name: kube-api-access-7gstn
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-01-05T00:06:29Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-01-05T00:06:30Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-01-05T00:06:30Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-01-05T08:17:25Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://e0ae7614d1c939ea9a4f45542bb12a5a6ab4ef1a3940cdc04319fa624e1838a3
    image: docker.io/library/postgres:10.1
    imageID: docker.io/library/postgres@sha256:3f4441460029e12905a5d447a3549ae2ac13323d045391b0cb0cf8b48ea17463
    lastState: {}
    name: postgres
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-01-05T00:06:30Z"
  hostIP: 192.168.56.102
  phase: Running
  podIP: 192.168.59.120
  podIPs:
  - ip: 192.168.59.120
  qosClass: BestEffort
  startTime: "2023-01-05T00:06:29Z"
